2) Note down the differences between Call by Value and Call by Reference and when to use what.
Call by Value:

Definition: In call by value, a copy of the actual parameter's value is passed to the function.
1)Passing Mechanism: The function receives the value of the actual parameter, not the parameter itself.
2)Parameter Modifications: Modifications made to the parameters inside the function do not affect the original value of the argument outside the function.
3)Typically Used With: Basic data types like integers, floats, characters, etc.
Example: Passing integers, floats, and characters.

Call by Reference:

Definition: In call by reference, the address of the actual parameter is passed to the function.
1)Passing Mechanism: The function receives the address of the actual parameter, allowing it to access and modify the original data.
2)Parameter Modifications: Modifications made to the parameters inside the function affect the original value of the argument outside the function.
3)Typically Used With: When you need a function to modify the actual parameter passed to it.
Example: Passing arrays, structs, objects, or when you need to modify the original value of a variable.

When to Use What:

Call by Value:

Use when the function doesn't need to modify the original value of the parameter.
Use with basic data types.
Use when you want to ensure the original value remains unchanged.

Call by Reference:

Use when you need the function to modify the original value of the parameter.
Use with arrays, structs, objects, or complex data structures.
Use when you want to avoid making a copy of large data objects for efficiency
